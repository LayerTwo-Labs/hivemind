// Copyright (c) 2017 The Bitcoin Core developers
// Distributed under the MIT software license, see the accompanying
// file COPYING or http://www.opensource.org/licenses/mit-license.php.

// TODO move all BMM Cache tests to bmmcache_tests.cpp
#include "bmmcache.h"
#include "base58.h"
#include "chainparams.h"
#include "consensus/validation.h"
#include "core_io.h"
#include "miner.h"
#include "policy/policy.h"
#include "random.h"
#include "script/sigcache.h"
#include "sidechain.h"
#include "uint256.h"
#include "util.h"
#include "utilstrencodings.h"
#include "validation.h"

#include "test/test_bitcoin.h"

#include <boost/test/unit_test.hpp>

static CFeeRate blockMinFeeRate = CFeeRate(DEFAULT_BLOCK_MIN_TX_FEE);

static BlockAssembler AssemblerForTest(const CChainParams& params) {
    BlockAssembler::Options options;

    options.nBlockMaxWeight = MAX_BLOCK_WEIGHT;
    options.blockMinFeeRate = blockMinFeeRate;
    return BlockAssembler(params, options);
}

BOOST_FIXTURE_TEST_SUITE(sidechain_tests, hivemind100Setup)

BOOST_AUTO_TEST_CASE(sidechain_obj)
{
    // Test sidechain object (for leveldb) scripts

    SidechainWithdrawal wt;
    wt.nSidechain = 0;
    wt.strDestination = "";
    wt.strRefundDestination = "";
    wt.amount = 0;
    wt.mainchainFee = 0;
    wt.status = WITHDRAWAL_UNSPENT;
    wt.hashBlindTx = uint256();

    CScript script = wt.GetScript();

    std::vector<unsigned char> vch;
    BOOST_CHECK(script.IsSidechainObj(vch));

    SidechainObj* parsed = ParseSidechainObj(vch);
    BOOST_CHECK(parsed);
}

BOOST_AUTO_TEST_CASE(sidechain_bmm_cache)
{
    // Reject null block hash
    bmmCache.CacheVerifiedBMM(uint256());
    BOOST_CHECK(!bmmCache.HaveVerifiedBMM(uint256()));

    // Accept valid
    uint256 hash1 = GetRandHash();
    bmmCache.CacheVerifiedBMM(hash1);
    BOOST_CHECK(bmmCache.HaveVerifiedBMM(hash1));

    // Reject another
    bmmCache.CacheVerifiedBMM(uint256());
    BOOST_CHECK(!bmmCache.HaveVerifiedBMM(uint256()));

    // Accept many & check that they have been cached
    for (int i = 0; i <= 1776; i++) {
        uint256 hash = GetRandHash();
        bmmCache.CacheVerifiedBMM(hash);
        BOOST_CHECK(bmmCache.HaveVerifiedBMM(hash));
    }

    // Check that the first cached item still can be looked up
    BOOST_CHECK(bmmCache.HaveVerifiedBMM(hash1));
}

std::vector<SidechainDeposit> GetTestDeposits()
{
    // Serialization of 30 sidechain deposits, in valid CTIP spend order.
    std::string strD1 = "440022734c657164704d345a6d445a41573635776d564b4a4a595634483845436265484b5a002d31010000000002000000013cbce0ae4b1e58feaaab21f552e612df9573bb0853456cd4fefd80abeb6e110c00000000494830450221009b666cb269ad1d252cc3d689c7deec374f22d2ee586815ac2719fe2370fed93102203b797969d1685d5a9c04ed6afdfd4aa56ba73def9cdf2f4e1cb041b3963e26cf01ffffffff03802e3c28010000001976a914712006656ab323b9c32df6ab253aeca198ea1fb188ac0000000000000000246a22734c657164704d345a6d445a41573635776d564b4a4a595634483845436265484b5a002d3101000000001976a91458c63096724814c3dcdf088b9bb0dc48e6e1a89c88ac000000000200000001000000b466964ca8d5c2e1a774f25cb5355e2ba8692ddf2f539dda3802fc09e49ef2f2";

    std::string strD2 = "440022734c657164704d345a6d445a41573635776d564b4a4a595634483845436265484b5a80c3c901000000000200000002d368ee25809a7abb586a294b709d12d873ba892733687ba837082715d7f908bf0000000048473044022032507944e67ea6a16468edb5e9d2e9b297eb4c6c734b1832370649e37eeec01f02201461a89e3c611cf16aa399ec0b59e5a6b1ed65c0afa5173cb553b8703c8c0e8201ffffffff8d4c9c30438003501beadeef99c315114d73464d729334705ebe4b403e3708c4020000008a4730440220077c242b8d1c513021278246a9950ab738c96137efcaedfb43a212fb3e4326cc02201444d7b6893c5f28d5306d135b0815a840af9056b98675b1b9cf5ad4fccfde330141043a6a472d711c6b4751af0cf82f397909469f943788f89bb7dfb1292d2a40e662ef2c32e6798315cc5fc21432e1db5513de3ddb3bda295199b065959cd76cf01cffffffff030098a327010000001976a9148171eb02d720ff73c5d3b8683a4b7fb73143035c88ac0000000000000000246a22734c657164704d345a6d445a41573635776d564b4a4a595634483845436265484b5a80f0fa02000000001976a91458c63096724814c3dcdf088b9bb0dc48e6e1a89c88ac000000000200000002000000b466964ca8d5c2e1a774f25cb5355e2ba8692ddf2f539dda3802fc09e49ef2f2";

    std::string strD3 = "440022734c657164704d345a6d445a41573635776d564b4a4a595634483845436265484b5a005a6202000000000200000002f31ef697d35728339b437a26f7660c1a3f5c1b9062370c24fef676370906c40a0000000049483045022100d1f4dcff5d96b8879f00761593d7bfe02696bb08cfdf0f61c07acd1ee2d1351e02205f517755ca2ac87513f25aa1fa3dec221b36535047eddde195c947530504fb5901ffffffff6e9f0a229c15d3b4aeeb9026cfe96b19c5d4ec4bda0f5f67c2ceb074de1fe86b020000008b483045022100fb87e30e8ab6ea27394a629c9af9d102ba2a839c6db08ac925aa70dd53b1199d02207875ed9e2d0ae6e362b736595ec3c4e400a60865b7f10d479db2e060350353190141043a6a472d711c6b4751af0cf82f397909469f943788f89bb7dfb1292d2a40e662ef2c32e6798315cc5fc21432e1db5513de3ddb3bda295199b065959cd76cf01cffffffff0380010b27010000001976a91425d803d4d8cd58476f4e3f0cbd7cd8165d77f21e88ac0000000000000000246a22734c657164704d345a6d445a41573635776d564b4a4a595634483845436265484b5a804a5d05000000001976a91458c63096724814c3dcdf088b9bb0dc48e6e1a89c88ac000000000200000003000000b466964ca8d5c2e1a774f25cb5355e2ba8692ddf2f539dda3802fc09e49ef2f2";

    std::string strD4 = "44002273514d5a5031357578346f66646955353654636267656e4e65475148786d7650727080f0fa020000000002000000025ce33e8886438287e659f2c543a46ccaf09fd55e196e2560c8287240263a577800000000484730440220745cd1751961f145422845d6b4de96767537b3715fceeacefaa1aaf7eac8050202206564c5a855c9f7b34050670ca6e04f0f470ffb260c718c0e2b2e1c6ab37cfb8001ffffffff75de488693f464ca8de84e2b71f726cfc19b098240b855df8a5b0bd1a07b26d0020000008b483045022100f105011f68847b7b1d040a7c075a7fcc8f3c3a9c581b5ddf704f2201740b55800220586d975bedae2d9abaf5514522c87b472323ff2f9439c07154ca4f2163358e6e0141043a6a472d711c6b4751af0cf82f397909469f943788f89bb7dfb1292d2a40e662ef2c32e6798315cc5fc21432e1db5513de3ddb3bda295199b065959cd76cf01cffffffff03006b7226010000001976a914753bc00021a6b4ae2809daa084e658ca8d3d1d1a88ac0000000000000000246a2273514d5a5031357578346f66646955353654636267656e4e65475148786d76507270003b5808000000001976a91458c63096724814c3dcdf088b9bb0dc48e6e1a89c88ac000000000200000004000000b466964ca8d5c2e1a774f25cb5355e2ba8692ddf2f539dda3802fc09e49ef2f2";

    std::string strD5 = "44002273514d5a5031357578346f66646955353654636267656e4e65475148786d7650727000879303000000000200000002127374cc1897a55dedce4b4a746ec0fc06003d7d90f6ff8272d00d9e7e8f0c6200000000484730440220737351be4019c221b3a6af38f917087560997d4161860015f68272c9dc8a6a4002203c5a31a3d4993b5220391c4a30f4a1aff9a82414ed2fbbc78cd115ccaab87c4401ffffffff50c324c511af0fef289465676b3207c812897923e3a883bfed9df0a3364cd0a4020000008a4730440220194cf4aad6cd323783d396a1a5a259e5a28eb019ddb4076bacb137f02334db820220522a29812801c93bdaad0da3e2ab4bb7f2e48c917f7d3557f31622842cb4ea180141043a6a472d711c6b4751af0cf82f397909469f943788f89bb7dfb1292d2a40e662ef2c32e6798315cc5fc21432e1db5513de3ddb3bda295199b065959cd76cf01cffffffff0380d4d925010000001976a914ba116bd6599b4bc2126d9185f1bb8aee92c640ba88ac0000000000000000246a2273514d5a5031357578346f66646955353654636267656e4e65475148786d7650727000c2eb0b000000001976a91458c63096724814c3dcdf088b9bb0dc48e6e1a89c88ac000000000200000005000000b466964ca8d5c2e1a774f25cb5355e2ba8692ddf2f539dda3802fc09e49ef2f2";

    std::string strD6 = "44002273514d5a5031357578346f66646955353654636267656e4e65475148786d7650727000e40b5402000000020000000450c324c511af0fef289465676b3207c812897923e3a883bfed9df0a3364cd0a4000000006b4830450221009bfdf7f1d1ed75bb5be47a339bea9a30fd270e8546af6c71c38fd00df4d1309b022068cdfe97856da679be219e35f0a99e12c7c130416062058bc206472842b2163e012103ff5ae8d561f0ca65d41cf5e758971d8ea4952fb66e044d97470f5f18cdfd7948ffffffffb8b8d6843a2cce7fc8cc7b4dece8ada1260321bffe1be8e643288c5378a039db0000000049483045022100f76095d304be87dcd5f67f8fbe5eaa73dbf6405790692c2d3f3960c8bdd6e32f02205b50d02c1ad022e028c69b2cb127ebd3ce37805dcee2a2bce95088f4e23ba9db01ffffffffdbf31330b91a6a42ca25c29d5b1decb24b62224e8ef6e6b5f77a5d38c28159b00000000049483045022100dc743edfaf414d28ef6c704f9d62e19f016d213ad0b3d91b6ef5400ac6e32c1102206a07f69d03478f5b3d1a66b158db6e6f49595911a0c1cce455d18a169aeaf51d01ffffffff1b2cda8159e3d30d94f3048eb8377fcb6fd80ccf017a3e98e003e4fd8861573d020000008b4830450221009c681558c72657959b3a2eb4545c578fec0a265c40069c1d04a4d27ba9bf482702206bdfbc3822783a3b888b08b0f7cf6a6326408d4c0cca3df8c52bbba43f1be5cc0141043a6a472d711c6b4751af0cf82f397909469f943788f89bb7dfb1292d2a40e662ef2c32e6798315cc5fc21432e1db5513de3ddb3bda295199b065959cd76cf01cffffffff0380d4d925010000001976a9141630481a45e0374b3b7797aba0c8772c797dfa4888ac0000000000000000246a2273514d5a5031357578346f66646955353654636267656e4e65475148786d7650727000a6f75f020000001976a91458c63096724814c3dcdf088b9bb0dc48e6e1a89c88ac0000000002000000010000001b6913a7e57acc96b1e7b18cbc4c5bbcabbffbc9d2577a3099da1e3093c73c4d";

    std::string strD7 = "44002273514d5a5031357578346f66646955353654636267656e4e65475148786d7650727000c5e24f0800000002000000000109291208b125b2223fbba2167026da85562669e32a40fded146e984329b3a448e3000000004948304502210083374b1e4c43a5a4d3d2baa685c0d3b9f5f8d4ac0f97dbff92f1f6746a2a287302203617664053b553ce694887fa7b7ac6e80d466470baa64861c2d6d18690c960e801ffffffff61d7d56baa1f729f103d9362058eb1a2b10c664c7ebffde135047f25a5428058000000004847304402206ac0abc6ce41f444f3ed4046925236319fa109e5c7efe6403e8ba704a9e3947e02201b9767e9ac03b59d1b2dce936701e299924109afcbff87120263e6a8436f06df01ffffffff6e9f0a229c15d3b4aeeb9026cfe96b19c5d4ec4bda0f5f67c2ceb074de1fe86b000000006a47304402206a0ded1fa103aac83c49c768b2364078fec356d1f47fcff7406b308fc3e450d602202ad80d081864235003adc0defa7a1d061af2537ca9642ae554e4199e482ba5e20121027367f72ff27dcafe789e2701d0b4ec3e1667acfb10732eda61d1d2fc835b1ed7ffffffff75de488693f464ca8de84e2b71f726cfc19b098240b855df8a5b0bd1a07b26d0000000006b483045022100efce31c1b60152fdbb3fd142ec6963f2b61e1fbb9c3ad1db7c6dd7844d3efe8302207e4d680e5cb8842b03811a56c4194c4f3e98a96a6ae3dfbb0d01c68e9fa05e63012102cd9d8e5305f57bee7f2304bbe6e88c0c350d4bf1b48231d4d60f1cd4a527aef4ffffffff783f4beda5b39330822ca237b4b2535e9ad1b261ae7abda682ae394fd2a86a830000000049483045022100ec40706602e9140a62b2b773f067ca3ae09d3acd9307b4d8173950599223cf45022043e5cd5572bbfe4cb771c93ce3c51cc14d41832274eca0222c62493aca13420801ffffffff8d4c9c30438003501beadeef99c315114d73464d729334705ebe4b403e3708c4000000006b483045022100a914fbc50c9cdd922de91e7eac2fa49a08c1df89a9646f2759920325a9851c5b02204858b73b8777b08c75c6c7cc222bb70e73a80a0581488bf7b2689b382fdd80f601210331a5da3d9d832f4d81f5f8374caa379c13fdd98ec5d6d21deb2bdf68ad920772ffffffffc53b7ce8c7f5b3184786011357c384bb14bc430d2881c6a099ffbbbc89384ac601000000171600148e530d2be18a37226ce71c07909964ad5ee5dc8bfffffffff1495eb85db494c2aaf69877bb8d1ede60b0d2c89a4503a0a25428f5b1cdca6b000000004847304402206ae4a0bdb9f3349a4720d9032c2819640f5a6d708176ceb793dd5011db352b76022050a08c72ec975765d4aa319c96fab1235feba569ac542aa198c958c1e2c26c8e01ffffffff28e94d9108d96d370ba6e3eb49030daa404f7cf695e7ef4b569d78460e44dc68020000008a47304402202f915def9702169f475027b02ecaf54b0957ae6b511de548bd27afa021e46e9602203e5fe3edd26ac0a6f81c350241ae6d2052aa675d0ab5fd1b488b1e937550a7bf0141043a6a472d711c6b4751af0cf82f397909469f943788f89bb7dfb1292d2a40e662ef2c32e6798315cc5fc21432e1db5513de3ddb3bda295199b065959cd76cf01cffffffff0334be8cf8000000001976a91421559fef8e6d2839922bb7da319f0e25f99e341d88ac0000000000000000246a2273514d5a5031357578346f66646955353654636267656e4e65475148786d76507270006bdaaf0a0000001976a91458c63096724814c3dcdf088b9bb0dc48e6e1a89c88ac000000000000024630430220490a7ec49659b0aa8d180c4ea79d12881d9e92ee37ef6045688c2158f4a81659021f7410d5dc6357861672d6b1b99d9977e9da7cada52d15f3275fdf16d12e7e37012102d027f725717f2d4cdc30921286683f060dd954d4e6a5584c7d38ca736e48680700000000000002000000020000001b6913a7e57acc96b1e7b18cbc4c5bbcabbffbc9d2577a3099da1e3093c73c4d";

    std::string strD8 = "440022734e31317a79694135324b454a387077536f546971717469776d6e5736595635667700ca9a3b0000000002000000000102bf162eb620f50d102d9bcd5bd11b5e94c2ed7e9e0ed0a506b9ec613dc3ed0a870000000017160014a1f87a3b264f7c4fe0c93037288e69878a4e9a9affffffff4cba6cd823027b983194db76b67d51c3f03ea6a42a5d2f2e4fda9cac45706dec020000008b4830450221008a5f1126a9fa4bfb173873e537710e088f63051b3fc7ef990a8a2008dab099ea02202377e9f5b69c41caae7f22d2c523e968136d0b67193e09706cf1673d11bfc6970141043a6a472d711c6b4751af0cf82f397909469f943788f89bb7dfb1292d2a40e662ef2c32e6798315cc5fc21432e1db5513de3ddb3bda295199b065959cd76cf01cffffffff034c3ca6e9000000001976a914659c28d14ab6b4385f3b1f4d205e985789996e6c88ac0000000000000000246a22734e31317a79694135324b454a387077536f546971717469776d6e57365956356677003575eb0a0000001976a91458c63096724814c3dcdf088b9bb0dc48e6e1a89c88ac0247304402205be1b72db4cc4486c84d84bba619ebd86e749361b6781192c69db8b48f0a73c0022015f74868c1c18be4790e110d50ef24f6edd4397de676630575e3e8bf356be51a0121030317640c3e89c8a97abaeb7521b348e8e64d604d8cd6662ee2a88cf458e8416e00000000000200000001000000021ca64ac45ce498e6a0e92135eb919ee1630e212365b27f2e248cae6f341518";

    std::string strD9 = "440022734e31317a79694135324b454a387077536f546971717469776d6e5736595635667700ca9a3b00000000020000000228e94d9108d96d370ba6e3eb49030daa404f7cf695e7ef4b569d78460e44dc68000000006b483045022100f0cf5a30af071d42bd1aa4c636f25dd10dfe954a5e00a022b29b1bcd6b5807670220028ca92fcfbbb55e7b68e0204d4cc6130548320ed6d39ae34506a2c10d05e639012103e888ca68ba9015047cddcc25d6572d298a2951fcc5f05c775ec0ef63e492e825ffffffffb5f230f9e95e45db045373d67a3c290f1f901e84264abadc4b0cc580905758d2020000008b483045022100894a922823939efaf3883a97234a131ea3d1cfbcd2e89bb9e71d4f112580003902205005824d1d924cbf7d19ef5b4e2bf30bd7ce9bcc8de7fbf966340d000d03d5040141043a6a472d711c6b4751af0cf82f397909469f943788f89bb7dfb1292d2a40e662ef2c32e6798315cc5fc21432e1db5513de3ddb3bda295199b065959cd76cf01cffffffff030074a6e9000000001976a914c71275d9548258dcd3017db84e3ee4b3d987e20c88ac0000000000000000246a22734e31317a79694135324b454a387077536f546971717469776d6e5736595635667700ff0f270b0000001976a91458c63096724814c3dcdf088b9bb0dc48e6e1a89c88ac000000000200000002000000021ca64ac45ce498e6a0e92135eb919ee1630e212365b27f2e248cae6f341518";

    std::string strD10 = "440022734e31317a79694135324b454a387077536f546971717469776d6e5736595635667700ca9a3b000000000200000002af14b585f7c23064e792e9f6f525e8b32f822c76d799678328b0e52dd01159f40000000048473044022065bd7cadfaffa167f251d181b9969d15a76c9898f79289f4b1410a3ea370e9c902203adcd223508749758d6e3a00a4ef1af4f6367907ecb64b3b82462e1ba9b4a5b701ffffffff48f0b305b2065bf6fb1155f75c6fb3e3efa743608249dbf1be42cd1e77e530b8020000008a47304402205e289d468435c81b4a4c3bc9d02b8e25abd65447d4011ed9ee2f62594e41fd3102205aa2249bbf74564d6e0a71d8ced18b042b955e7dd77802de4968fde4673da1220141043a6a472d711c6b4751af0cf82f397909469f943788f89bb7dfb1292d2a40e662ef2c32e6798315cc5fc21432e1db5513de3ddb3bda295199b065959cd76cf01cffffffff038091d2ed000000001976a91465c7fdf4471d29bfe61641c289352748f86aa59d88ac0000000000000000246a22734e31317a79694135324b454a387077536f546971717469776d6e5736595635667700c9aa620b0000001976a91458c63096724814c3dcdf088b9bb0dc48e6e1a89c88ac000000000200000003000000021ca64ac45ce498e6a0e92135eb919ee1630e212365b27f2e248cae6f341518";

    std::string strD11 = "440022734e31317a79694135324b454a387077536f546971717469776d6e5736595635667700ca9a3b000000000200000002b4591427f7e91d8f6fcab60409af0cb801ea65af87f711a1d0c2a16fcdbae3650000000049483045022100c17fd56a52e2a8b95062d9270561a98fb4136acd4c1585db1c47490b9acf658b022057532275c318b3959fe769b6d4969083135b26e775d4105024c87a1f59ab4ba501ffffffffc8a81c83892049d0c9de66176b4acac4956623a3ececbbaa0cb6e53902c928f1020000008a47304402202806cb498a51f826cb8305e6359c04364442abfaac5e7c94d8df286b495da0b902204eefe18a859a018d787ff3d10671aec5fcf9a6037c9ba9c34ede78804cbe94520141043a6a472d711c6b4751af0cf82f397909469f943788f89bb7dfb1292d2a40e662ef2c32e6798315cc5fc21432e1db5513de3ddb3bda295199b065959cd76cf01cffffffff038091d2ed000000001976a914fc96d9cfc9204ff12cd49c0c91382d45bfbd0de188ac0000000000000000246a22734e31317a79694135324b454a387077536f546971717469776d6e573659563566770093459e0b0000001976a91458c63096724814c3dcdf088b9bb0dc48e6e1a89c88ac000000000200000004000000021ca64ac45ce498e6a0e92135eb919ee1630e212365b27f2e248cae6f341518";

    std::string strD12 = "440022734e31317a79694135324b454a387077536f546971717469776d6e5736595635667700ca9a3b00000000020000000248b7c140c03f411defaf43ca4f35d0b8b61dd30843721757210c4c672b1e4900000000004948304502210088a829e1609ebeab055f6651ce9e7860fde4022de743531f935859549aae474a022068d180e898f830d89c56194c278193ba528d7d1c3ea0a5d704389680517ad3cf01ffffffff9ebc8030d58c32f6521a618de20de927ae00259997887415d569f08553e03054020000008b483045022100af7ab17c91dd53c97f559731734461d82b56920f285a1e2602c6734f1312a4d6022041197923247f1d69abf3e3b694cd6c7d5ebc23d0cbe6ba9d68bc9bbaead187fe0141043a6a472d711c6b4751af0cf82f397909469f943788f89bb7dfb1292d2a40e662ef2c32e6798315cc5fc21432e1db5513de3ddb3bda295199b065959cd76cf01cffffffff038091d2ed000000001976a914966527f7ad9151004325c6d3bad8ad71bfddfa7e88ac0000000000000000246a22734e31317a79694135324b454a387077536f546971717469776d6e57365956356677005de0d90b0000001976a91458c63096724814c3dcdf088b9bb0dc48e6e1a89c88ac000000000200000005000000021ca64ac45ce498e6a0e92135eb919ee1630e212365b27f2e248cae6f341518";

    std::string strD13 = "44002273636e637474734472745069707945764650427671326e775269556d324370636e7a10d45b2e000000000200000002557f13c90788f062a36adc7856830dd89b4b62bade5c26038330e73c65c9a5ec0000000049483045022100cd0503e19ae6f256a4e61934f725fe531083416b5842e5036a5e23238f62934702203f59fbed396b0a56577767e2b4c7376ae8301edcfe518b54137782973905b29b01ffffffffb22f2b2c92836f17baff68b8c797397c3d54349ad75a3597686ac8bd69756bc2020000008a47304402204e3a624c0d3b8ccf0e55c2e6332a903f33afdf367df2f26e1f504f5b3eae516a0220016d57cc92036a7976facd41e8c32100372dc8ac38c811e253b4a3e841af2e500141043a6a472d711c6b4751af0cf82f397909469f943788f89bb7dfb1292d2a40e662ef2c32e6798315cc5fc21432e1db5513de3ddb3bda295199b065959cd76cf01cffffffff03708711fb000000001976a9144dd1cee0a6b1a249311f8acdf64849907283580488ac0000000000000000246a2273636e637474734472745069707945764650427671326e775269556d324370636e7a10313c080c0000001976a91458c63096724814c3dcdf088b9bb0dc48e6e1a89c88ac000000000200000006000000021ca64ac45ce498e6a0e92135eb919ee1630e212365b27f2e248cae6f341518";

    std::string strD14 = "440022735162527951704a363979574e5a47637673776d5357315968534832726b7031676210d45b2e00000000020000000239885c3426b9ad7397521935b8239cf02f2e13285b8fd393aa230b710e0178f50000000049483045022100d067b7bd80c8f3ba747e0dbc0ad28026f7001490605f7f850890221f2031a7a50220353a8d52f9a21a334c1d47ea5fbe0f5188cb71920c307ac40050fb0b40ec672e01ffffffff08fc5bc51e6c73bfeb465dd5fffee2c6af5eed7e9d13e9883d72c1b06c2a5575020000008b483045022100a53b6c62698c994f1dffabc21fb0df898bc25fe6eccbce88bf14dfb5c32ebf7a022047c0616b47d962f2a043ea08876d60ff15f30aa4da519ecf29296f83fa4829660141043a6a472d711c6b4751af0cf82f397909469f943788f89bb7dfb1292d2a40e662ef2c32e6798315cc5fc21432e1db5513de3ddb3bda295199b065959cd76cf01cffffffff03708711fb000000001976a914474a16f75637367f315650cf862212d548964d3c88ac0000000000000000246a22735162527951704a363979574e5a47637673776d5357315968534832726b70316762200598360c0000001976a91458c63096724814c3dcdf088b9bb0dc48e6e1a89c88ac000000000200000007000000021ca64ac45ce498e6a0e92135eb919ee1630e212365b27f2e248cae6f341518";

    std::string strD15 = "44002273506d6f6650515770436e4d367a50377139534d79547a74696478646333595a43590065cd1d0000000002000000029d8e525dba7f99f3e3e57f2dd9a013adce38c1a5ed59431f2eb7f0613dd88a32000000004847304402205fd9c3e496d0940637599a0195f1768c1058739420f9d7befb0b5a9ae9abdd4a02203ea88e35d488be33e2006c316302c2617c90a0029c904b2217ad8660630139e301ffffffff00082cc6d9533d2993780264c0cbac5ddf9a532f1e186713b45c36beb8552bdc020000008b483045022100e004d67b50dd10d481bb46d8dd59a0736f40d26bd2c3d72211814db0538b2709022019c85b52bcc23a878e854012e0732105f54417da41dbc197523883555a79ee830141043a6a472d711c6b4751af0cf82f397909469f943788f89bb7dfb1292d2a40e662ef2c32e6798315cc5fc21432e1db5513de3ddb3bda295199b065959cd76cf01cffffffff0380f69f0b010000001976a914a90761bb926cbfa117a2a902752562be62ae9b4088ac0000000000000000246a2273506d6f6650515770436e4d367a50377139534d79547a74696478646333595a4359206a65540c0000001976a91458c63096724814c3dcdf088b9bb0dc48e6e1a89c88ac000000000200000008000000021ca64ac45ce498e6a0e92135eb919ee1630e212365b27f2e248cae6f341518";

    std::string strD16 = "44002273506d6f6650515770436e4d367a50377139534d79547a74696478646333595a43590065cd1d0000000002000000024b5dfa397337fc1f732d4d5a5c3d2121432eb07065f0225a55a37eb273c310f70000000048473044022043fb36f7090decbde053aba614e186ab60d043b02332ec3065c17866584cac13022026b49a04b6316ee965f606094bf50d491c6add3d44637d1a4badfdc949b1766501ffffffff11c273acb083e7e07e166a0c4ac683c8ff9add1fde0aa9cdd9868528c30e0467020000008b483045022100a09a3b03c65b2d79ab51ffdf616ee1646510e6fd56d3c18b28d57faf7d2b151702203af075f4f3f6f067ffeb7b6dc864a33125ab48046de96b088d09e51faa12fcfe0141043a6a472d711c6b4751af0cf82f397909469f943788f89bb7dfb1292d2a40e662ef2c32e6798315cc5fc21432e1db5513de3ddb3bda295199b065959cd76cf01cffffffff0380f69f0b010000001976a914f5b04afe624b656b44f00a852cbfc259725b3ff688ac0000000000000000246a2273506d6f6650515770436e4d367a50377139534d79547a74696478646333595a435920cf32720c0000001976a91458c63096724814c3dcdf088b9bb0dc48e6e1a89c88ac000000000200000009000000021ca64ac45ce498e6a0e92135eb919ee1630e212365b27f2e248cae6f341518";

    std::string strD17 = "44002273506d6f6650515770436e4d367a50377139534d79547a74696478646333595a43590065cd1d00000000020000000248f0b305b2065bf6fb1155f75c6fb3e3efa743608249dbf1be42cd1e77e530b8000000006b483045022100f4ab300f0354d187eea0958aa221f0352211741cdbb6f8514ca4c6ac2016f04e0220361dcc4054cea8cf55a3d34687030a8ec54f72aa0fb0a610e0bf1cf95195d5030121030d051607714db8d5d64c279df26edf3257bd342c89aed402f491f1a09b2d7d56ffffffff5c247821ea3a271cc5bd9726c892785b592d74d1fa4c460b48a30859e2b62ac2020000008b483045022100fef29e1ba194337aeb32a575e294301111279ca7e780142ee41dc016f5c0864702202132009683e6fd6920c24a7290ce3d9d9e5fde2df4dc6ad8a2cd9a8add490a2c0141043a6a472d711c6b4751af0cf82f397909469f943788f89bb7dfb1292d2a40e662ef2c32e6798315cc5fc21432e1db5513de3ddb3bda295199b065959cd76cf01cffffffff03807840cb000000001976a914f8451f873fa47c36459d468239b135fbdd97c25988ac0000000000000000246a2273506d6f6650515770436e4d367a50377139534d79547a74696478646333595a4359203400900c0000001976a91458c63096724814c3dcdf088b9bb0dc48e6e1a89c88ac000000000200000001000000585568996d3cf79f81ba8a81d029630755d01cef3f56ffe40cc99e394decde20";

    std::string strD18 = "44002273506d6f6650515770436e4d367a50377139534d79547a74696478646333595a43590065cd1d000000000200000002c8a81c83892049d0c9de66176b4acac4956623a3ececbbaa0cb6e53902c928f1000000006b4830450221008274b496aafd02931a95870ba34a1328adb6ad3e1de08cbb1ca47b06da337b3702205eb086c4e7f8ca28180f7b75873ff26f88ada69a0181184c340d1c7bb32fb6110121030385dc481ae0a1ecd7a329178ac10f6c3c401371dc904b1af3c8301c45d3f6c2fffffffff6a160cdec58b02677a11d7ccced4b1be2e210f59e9e722dd09cdb3e7c1dd96b020000008b4830450221008670d04db9d96f686a920cb64bd8e134bdea6f48d3b36eb8293b2354575e914102200fa389ef34274bfc749c9e5c2f686dbef0a1ad135d59c4f260b805df4611c4c70141043a6a472d711c6b4751af0cf82f397909469f943788f89bb7dfb1292d2a40e662ef2c32e6798315cc5fc21432e1db5513de3ddb3bda295199b065959cd76cf01cffffffff0300966ccf000000001976a914ae51a2d4e16db2a8d28979971a8a4b961e15698988ac0000000000000000246a2273506d6f6650515770436e4d367a50377139534d79547a74696478646333595a43592099cdad0c0000001976a91458c63096724814c3dcdf088b9bb0dc48e6e1a89c88ac000000000200000002000000585568996d3cf79f81ba8a81d029630755d01cef3f56ffe40cc99e394decde20";

    std::string strD19 = "44002273506d6f6650515770436e4d367a50377139534d79547a74696478646333595a43590065cd1d0000000002000000029ebc8030d58c32f6521a618de20de927ae00259997887415d569f08553e03054000000006b483045022100db21a03c14f17549989c9066eb94437f8d5388d5215900d133708c8f48f078b60220297f53cfc7adc149c7221b393ff8224e7ab3b04e77434343bbeebd7ecf832e300121025b589fdc5867b1f419a3a11e152db73cc0d09d85e9087e5eb96939649fe22e42ffffffff612ac98ef2c834aa6b57acf01b793ac75ad5af4bcfe6f36c588828f176f77c63020000008b483045022100a5b36b6951512b6efc939f18935a47dfcdb8939ecc17e50df8489e6c2fa8ad7a02204b978837bb579626b8e1ba8e899e2d38a3546363b67440c6cc624ad13026b4f00141043a6a472d711c6b4751af0cf82f397909469f943788f89bb7dfb1292d2a40e662ef2c32e6798315cc5fc21432e1db5513de3ddb3bda295199b065959cd76cf01cffffffff0300966ccf000000001976a914e5d39dcc37f6098947469ae1022f7bbd036d0aef88ac0000000000000000246a2273506d6f6650515770436e4d367a50377139534d79547a74696478646333595a435920fe9acb0c0000001976a91458c63096724814c3dcdf088b9bb0dc48e6e1a89c88ac000000000200000003000000585568996d3cf79f81ba8a81d029630755d01cef3f56ffe40cc99e394decde20";

    std::string strD20 = "44002273506d6f6650515770436e4d367a50377139534d79547a74696478646333595a43590065cd1d000000000200000002b22f2b2c92836f17baff68b8c797397c3d54349ad75a3597686ac8bd69756bc2000000006a47304402203e4266fc3533c2a11d4d39acd8e73942862788b948231ea52b62eef6e0dd1e7b02201222d7a863aaa07467ea8379727858bc74d74d58544154db5c1519a5810b4394012103a6549ef4bb8e95a6c4f76c4a54255194bd97db376c9b86494007c66eb69a55f6ffffffff82b1e7afd17dc9ef2db4897113dfe83cdbffb98c3d3fffc8d550bfca63a6b9ec020000008a473044022030413e08346647c86b75a64c204454c29ba2e54d6fe2673cc49ecb5239c5c74e02205655c2d6cc524a5f4264f1e8eab62043db25a0b79711078cd2dbbaa70a725a2b0141043a6a472d711c6b4751af0cf82f397909469f943788f89bb7dfb1292d2a40e662ef2c32e6798315cc5fc21432e1db5513de3ddb3bda295199b065959cd76cf01cffffffff0300966ccf000000001976a91405de649686b72b1d4e5379f22e4b7702e11ef58188ac0000000000000000246a2273506d6f6650515770436e4d367a50377139534d79547a74696478646333595a4359206368e90c0000001976a91458c63096724814c3dcdf088b9bb0dc48e6e1a89c88ac000000000200000004000000585568996d3cf79f81ba8a81d029630755d01cef3f56ffe40cc99e394decde20";

    std::string strD21 = "44002273506d6f6650515770436e4d367a50377139534d79547a74696478646333595a43590065cd1d000000000200000000010299b411cef7ed1750da178ee871aa2fe53abf6af38782d3241f3589853b9f4af10100000017160014425f4bd396889633a2051f7e5bb870e5c7ae908effffffff5edf2906afda7c8fa9b60105e4fd27adfcd3fcfcea90f9bdbbdba964bde69b57020000008a4730440220461842a060761137fbc837b335e9820d5b581f5436986fea3a2eb835967280b2022024ddad8138d26807e91365ac4cba3d881d98f22441b1a5f4ab1fd834a9eda4be0141043a6a472d711c6b4751af0cf82f397909469f943788f89bb7dfb1292d2a40e662ef2c32e6798315cc5fc21432e1db5513de3ddb3bda295199b065959cd76cf01cffffffff03008b26da000000001976a91478974dc923b5d4763e1284942b533423050e6aa988ac0000000000000000246a2273506d6f6650515770436e4d367a50377139534d79547a74696478646333595a435920c835070d0000001976a91458c63096724814c3dcdf088b9bb0dc48e6e1a89c88ac02483045022100c9380c69f72c07be77d61bbc290e87347b5c0ff98861fe3ce0d14a8f53abbe2f0220233dbeb0c42d977948590107ef9c30f42dd2e4a28449841d01c34d07a022b7210121020180084c4a0a88e48ee4e5f81cb79b1930674ee74cd70c50095ef1b504c7ab7700000000000200000005000000585568996d3cf79f81ba8a81d029630755d01cef3f56ffe40cc99e394decde20";

    std::string strD22 = "44002273534b63317a794b38626970454176786b56324d74395231536e6d53544b7857645400752b7d00000000020000000208fc5bc51e6c73bfeb465dd5fffee2c6af5eed7e9d13e9883d72c1b06c2a5575000000006b483045022100fb77c6fadd46ff855f1c47df8a9a9dfb723343a50ad8fbd4eaa827df8f69f7a50220697f2ab109dfcd00c34e11824b4fb957ab7db44922a0be0ddaf038698823a79c012102a338aec6017ce1747d31e69ec85fde144c3f501f47f94ffc2c1e7caf67e4e27fffffffffc5848219ee2f8e4cd70be3d32395e407b2c4686acfaee66b927e9ed3b546a0f1020000008a47304402201155b124a570720d1abadd5676ec3e3f7bd39221c6976d3513945db71338a8e102202f4c0778f6d924b038b9106701ed321965209e54a2542a2e8fc3cd3633dcac670141043a6a472d711c6b4751af0cf82f397909469f943788f89bb7dfb1292d2a40e662ef2c32e6798315cc5fc21432e1db5513de3ddb3bda295199b065959cd76cf01cffffffff03f07b4d7d000000001976a9145920fa0a0cce7e576322e046c8fca00b7b8afc7588ac0000000000000000246a2273534b63317a794b38626970454176786b56324d74395231536e6d53544b78576454203d61840d0000001976a91458c63096724814c3dcdf088b9bb0dc48e6e1a89c88ac000000000200000006000000585568996d3cf79f81ba8a81d029630755d01cef3f56ffe40cc99e394decde20";

    std::string strD23 = "44002273534b63317a794b38626970454176786b56324d74395231536e6d53544b7857645400752b7d00000000020000000200082cc6d9533d2993780264c0cbac5ddf9a532f1e186713b45c36beb8552bdc000000006a473044022034fb030a94f8fe595b2a77b048a3ca04fe04d028badf844fb27ac2648bb6a02502204ad96dd5178c6d644bf950f39392790ad27cad6d601959e55120e866a1eeec3d012103aff3f053ce169a3185f64072b83500d79f5194ea5ca981af338e3d5fafca36b9ffffffff84a02aeda51022d394a6f5e89f084a73bdf66d948f6735c8d0c2ce32ce037889020000008a47304402207ab3473c7e341e7e3470cfecabcc5ea01cccdae2e35a330ae1abc6cb60f6ae090220186fe0228e427833d25784f00762e99309459ea85c11cdd54fb069eda5d7fa6c0141043a6a472d711c6b4751af0cf82f397909469f943788f89bb7dfb1292d2a40e662ef2c32e6798315cc5fc21432e1db5513de3ddb3bda295199b065959cd76cf01cffffffff03f07b4d7d000000001976a9149d644eecb25fc46a1c7766439003a01bda5cb31a88ac0000000000000000246a2273534b63317a794b38626970454176786b56324d74395231536e6d53544b7857645420b28c010e0000001976a91458c63096724814c3dcdf088b9bb0dc48e6e1a89c88ac000000000200000007000000585568996d3cf79f81ba8a81d029630755d01cef3f56ffe40cc99e394decde20";

    std::string strD24 = "44002273534b63317a794b38626970454176786b56324d74395231536e6d53544b7857645480f0fa020000000002000000025c247821ea3a271cc5bd9726c892785b592d74d1fa4c460b48a30859e2b62ac2000000006b483045022100ef5bcd6d5330eabecffe8b1389d2a42a3b60dfba4cabb7b228c5667ec0000354022052214541561b0baa512a562e6599e4c1e11aeac65db285ae517d8f9ccc58f3f80121030a26908d25681447914b3203f717391251509810b5a8cea7bfa6d24bf3d404e5ffffffff33cac8df41dd38478be35bf31adc3fd4546394f9329eb0bf26dcc5f50cf35d9a020000008a4730440220558bc7cc7cdb3452cf2f81a1b4f901cbbd7a39d6a3e05013882ec459b7446b4c02207077aa72a68c18294b8e61807dcca4259d6b689da931c15217b741a3fed77c060141043a6a472d711c6b4751af0cf82f397909469f943788f89bb7dfb1292d2a40e662ef2c32e6798315cc5fc21432e1db5513de3ddb3bda295199b065959cd76cf01cffffffff03806f0c08010000001976a914ec2b2282147996c971209d949041ed4f9449334b88ac0000000000000000246a2273534b63317a794b38626970454176786b56324d74395231536e6d53544b78576454a0a287040e0000001976a91458c63096724814c3dcdf088b9bb0dc48e6e1a89c88ac000000000200000008000000585568996d3cf79f81ba8a81d029630755d01cef3f56ffe40cc99e394decde20";

    std::string strD25 = "44002273666f397a4b78704d6363623836594761714335416f57447a4639326d7a6a4b327380d1f00800000000020000000211c273acb083e7e07e166a0c4ac683c8ff9add1fde0aa9cdd9868528c30e0467000000006b483045022100a6c7b50eadc8813dc3c6c7d95d9d6e18366f7dc5f006817af03ea829ccbc53950220214cd207cd6f5fd946526d776bc96bcc471837da5175e5a1d7e5e98b73c19eb30121033a9029b5e512a4d0f53a05b2c35a43e9afb784a14b48f3d7562869430c9b2ae7ffffffffa5ebac98106e7fdf6590c5f168f7ef5b333355b9d6fd2ee05e52154546b370b7020000008b483045022100b76ffebe80bb28d45c95c93bf89b6c07565dec3821a14f1fbbcd955e64bc553f02202596a62f68203e20cf49925b4e31d1a39407f1c40c8e3e8ea90e774db3f034d90141043a6a472d711c6b4751af0cf82f397909469f943788f89bb7dfb1292d2a40e662ef2c32e6798315cc5fc21432e1db5513de3ddb3bda295199b065959cd76cf01cffffffff03808e1602010000001976a914ba85e602a3de87c4ee4b0f949635ad618f1350d288ac0000000000000000246a2273666f397a4b78704d6363623836594761714335416f57447a4639326d7a6a4b32732074780d0e0000001976a91458c63096724814c3dcdf088b9bb0dc48e6e1a89c88ac000000000200000009000000585568996d3cf79f81ba8a81d029630755d01cef3f56ffe40cc99e394decde20";

    std::string strD26 = "44002273666f397a4b78704d6363623836594761714335416f57447a4639326d7a6a4b327380d1f00800000000020000000206db9c0c403819fd70d83a7bf51a17ffd7a643f9901e56c553fc077a09b9b1b6000000004847304402204504fdbb6fbc1cf14a4ccae5a83d4eaac09471002720b04b3e80cd73fc48110e0220242fc7bc72f6ce19dd8c220bf6e7725534c63b610c4b9a8e3402003cad82816801ffffffff77862a2ea03ab43d2d64bc2f40e5cc0ea5f0986a5437077f2202a442794960bd020000008b483045022100d14a6417e9e91ce6e9e49f9dcdddc2f26db22b4a9129c7d3612dddb635a719d3022012906d31e82eb41c9cd292cfd8408d95a1fc6011f7c90cbbba7c32b7970ba7a10141043a6a472d711c6b4751af0cf82f397909469f943788f89bb7dfb1292d2a40e662ef2c32e6798315cc5fc21432e1db5513de3ddb3bda295199b065959cd76cf01cffffffff03008a7c20010000001976a914318440e6e8bca06fadad712fca49fcc619311b2488ac0000000000000000246a2273666f397a4b78704d6363623836594761714335416f57447a4639326d7a6a4b3273a04569160e0000001976a91458c63096724814c3dcdf088b9bb0dc48e6e1a89c88ac00000000020000000a000000585568996d3cf79f81ba8a81d029630755d01cef3f56ffe40cc99e394decde20";

    std::string strD27 = "44002273666f397a4b78704d6363623836594761714335416f57447a4639326d7a6a4b327380d1f008000000000200000002c9f433b2bf0a8c561b8c59e2606f9ce4f0cfb8e598e915edbb2452141ef1fdcf0000000048473044022002995390c503177bb5f718aaa68673b66244ae7c363205864f2c37dbd372822c022064ba0eccf6698e9a1253cfe361a37d3e5c920520cc478595208c4489e7731b4e01ffffffff814d42a8116408525c25b33a8448de49fd9ed430ca516912e5340a780d222221020000008b483045022100d88bc0c74fb3f53dcb86708ec1bd2ac8a011620176d2f4394a7ade9bd6289a9302203ffcaa0e87f0017c8840215bb5b16e06e3a4a041ca22385157dbab1232712e5f0141043a6a472d711c6b4751af0cf82f397909469f943788f89bb7dfb1292d2a40e662ef2c32e6798315cc5fc21432e1db5513de3ddb3bda295199b065959cd76cf01cffffffff03008a7c20010000001976a91417a404ac7d202c8bd54e43edf6add1a94060f9e688ac0000000000000000246a2273666f397a4b78704d6363623836594761714335416f57447a4639326d7a6a4b327320175a1f0e0000001976a91458c63096724814c3dcdf088b9bb0dc48e6e1a89c88ac00000000020000000b000000585568996d3cf79f81ba8a81d029630755d01cef3f56ffe40cc99e394decde20";

    std::string strD28 = "44002273666f397a4b78704d6363623836594761714335416f57447a4639326d7a6a4b327380d1f00800000000020000000234214701374d1e486761214c6ac22898a29f0917e16619a330159ad6906fedf70000000048473044022072d5e5125d345e5b94c25e404ef8d3822d685c3121ff7b8d3a0f455f5a8f651902206c09c27801fa9e9623be5a888af7d1a0ef3ee17ba748a0144779e8c39b1c9f9701ffffffffa90d75b22760acd3ba5d6126e85ecd5e201b5bb0afd74bf2dbe0bcf8697b3430020000008b483045022100e8ed057b112967ca5589fe09c0c253eb18a4ded0c7d430d85cef361146cea8e702201d2345e853e9bac50dc9dbcef219669784c975174d9bb0b6b0b796fac4f8ceae0141043a6a472d711c6b4751af0cf82f397909469f943788f89bb7dfb1292d2a40e662ef2c32e6798315cc5fc21432e1db5513de3ddb3bda295199b065959cd76cf01cffffffff03008a7c20010000001976a914e628c1f8bb307b73c5718998d7377e309e98080988ac0000000000000000246a2273666f397a4b78704d6363623836594761714335416f57447a4639326d7a6a4b3273a0e84a280e0000001976a91458c63096724814c3dcdf088b9bb0dc48e6e1a89c88ac00000000020000000c000000585568996d3cf79f81ba8a81d029630755d01cef3f56ffe40cc99e394decde20";

    std::string strD29 = "44002273666f397a4b78704d6363623836594761714335416f57447a4639326d7a6a4b327380d1f008000000000200000002fc14e232cd365aeb1e6b7424389b20cd1a17b94be8c9091566a201d357224fe00000000049483045022100deee0e8b92376e5bb86952cccad50d863a7afbfbe458f82d833257809b8d79180220417b17d8c6d45fd8b9b1c1763f1f3be9f7c7d9c15d203d0fad40374144aac27001ffffffffccf447dee733f49603fd71c32ae81b74d375f76ac875d4e8df6fcf98b88bec9e020000008a4730440220077f21bde5e410899f9b817c748a3cedc8ea52bb8ec3752ff586d0132924b311022050350402e76e573adf85df4726a2f7aced7eba1ed034cf01f107c9534632f5350141043a6a472d711c6b4751af0cf82f397909469f943788f89bb7dfb1292d2a40e662ef2c32e6798315cc5fc21432e1db5513de3ddb3bda295199b065959cd76cf01cffffffff03008a7c20010000001976a914fbf712717c317247f386031f4f514f2b3588b28888ac0000000000000000246a2273666f397a4b78704d6363623836594761714335416f57447a4639326d7a6a4b327320ba3b310e0000001976a91458c63096724814c3dcdf088b9bb0dc48e6e1a89c88ac00000000020000000d000000585568996d3cf79f81ba8a81d029630755d01cef3f56ffe40cc99e394decde20";

    std::string strD30 = "44002273666f397a4b78704d6363623836594761714335416f57447a4639326d7a6a4b327380d1f008000000000200000002dafd7eef709f89ceec71071154a06170bcaf154879c308b4e121e3da27ac85c500000000484730440220308ed323b5847d5ac8d986e89441dfa79c06fcd51f05607b73230303d92447d202202d640030b3a31fc375686317f53825ac87036d433fe56378b24bf15fe0d7a3f501fffffffffe9b0a2a3c3f1170eef9112a81347c9f78bee771197bba111d32cebe205cdb98020000008a473044022013f4ded47d1ea7775f165faa401aff689a3134d8b2dffed3da032888178a4d55022069f8dd39ec2567dc892ce42b9c63cb76dd90c56561277efae363b5abcada521e0141043a6a472d711c6b4751af0cf82f397909469f943788f89bb7dfb1292d2a40e662ef2c32e6798315cc5fc21432e1db5513de3ddb3bda295199b065959cd76cf01cffffffff03008a7c20010000001976a914105b323050a9d0def3bf2452ab37bf476af85e4288ac0000000000000000246a2273666f397a4b78704d6363623836594761714335416f57447a4639326d7a6a4b3273a08b2c3a0e0000001976a91458c63096724814c3dcdf088b9bb0dc48e6e1a89c88ac00000000020000000e000000585568996d3cf79f81ba8a81d029630755d01cef3f56ffe40cc99e394decde20";

    CDataStream ss1(ParseHex(strD1), SER_DISK, CLIENT_VERSION);
    CDataStream ss2(ParseHex(strD2), SER_DISK, CLIENT_VERSION);
    CDataStream ss3(ParseHex(strD3), SER_DISK, CLIENT_VERSION);
    CDataStream ss4(ParseHex(strD4), SER_DISK, CLIENT_VERSION);
    CDataStream ss5(ParseHex(strD5), SER_DISK, CLIENT_VERSION);
    CDataStream ss6(ParseHex(strD6), SER_DISK, CLIENT_VERSION);
    CDataStream ss7(ParseHex(strD7), SER_DISK, CLIENT_VERSION);
    CDataStream ss8(ParseHex(strD8), SER_DISK, CLIENT_VERSION);
    CDataStream ss9(ParseHex(strD9), SER_DISK, CLIENT_VERSION);
    CDataStream ss10(ParseHex(strD10), SER_DISK, CLIENT_VERSION);
    CDataStream ss11(ParseHex(strD11), SER_DISK, CLIENT_VERSION);
    CDataStream ss12(ParseHex(strD12), SER_DISK, CLIENT_VERSION);
    CDataStream ss13(ParseHex(strD13), SER_DISK, CLIENT_VERSION);
    CDataStream ss14(ParseHex(strD14), SER_DISK, CLIENT_VERSION);
    CDataStream ss15(ParseHex(strD15), SER_DISK, CLIENT_VERSION);
    CDataStream ss16(ParseHex(strD16), SER_DISK, CLIENT_VERSION);
    CDataStream ss17(ParseHex(strD17), SER_DISK, CLIENT_VERSION);
    CDataStream ss18(ParseHex(strD18), SER_DISK, CLIENT_VERSION);
    CDataStream ss19(ParseHex(strD19), SER_DISK, CLIENT_VERSION);
    CDataStream ss20(ParseHex(strD20), SER_DISK, CLIENT_VERSION);
    CDataStream ss21(ParseHex(strD21), SER_DISK, CLIENT_VERSION);
    CDataStream ss22(ParseHex(strD22), SER_DISK, CLIENT_VERSION);
    CDataStream ss23(ParseHex(strD23), SER_DISK, CLIENT_VERSION);
    CDataStream ss24(ParseHex(strD24), SER_DISK, CLIENT_VERSION);
    CDataStream ss25(ParseHex(strD25), SER_DISK, CLIENT_VERSION);
    CDataStream ss26(ParseHex(strD26), SER_DISK, CLIENT_VERSION);
    CDataStream ss27(ParseHex(strD27), SER_DISK, CLIENT_VERSION);
    CDataStream ss28(ParseHex(strD28), SER_DISK, CLIENT_VERSION);
    CDataStream ss29(ParseHex(strD29), SER_DISK, CLIENT_VERSION);
    CDataStream ss30(ParseHex(strD30), SER_DISK, CLIENT_VERSION);

    // Unserialize the testing deposits

    SidechainDeposit d1;
    ss1 >> d1;
    SidechainDeposit d2;
    ss2 >> d2;
    SidechainDeposit d3;
    ss3 >> d3;
    SidechainDeposit d4;
    ss4 >> d4;
    SidechainDeposit d5;
    ss5 >> d5;
    SidechainDeposit d6;
    ss6 >> d6;
    SidechainDeposit d7;
    ss7 >> d7;
    SidechainDeposit d8;
    ss8 >> d8;
    SidechainDeposit d9;
    ss9 >> d9;
    SidechainDeposit d10;
    ss10 >> d10;
    SidechainDeposit d11;
    ss11 >> d11;
    SidechainDeposit d12;
    ss12 >> d12;
    SidechainDeposit d13;
    ss13 >> d13;
    SidechainDeposit d14;
    ss14 >> d14;
    SidechainDeposit d15;
    ss15 >> d15;
    SidechainDeposit d16;
    ss16 >> d16;
    SidechainDeposit d17;
    ss17 >> d17;
    SidechainDeposit d18;
    ss18 >> d18;
    SidechainDeposit d19;
    ss19 >> d19;
    SidechainDeposit d20;
    ss20 >> d20;
    SidechainDeposit d21;
    ss21 >> d21;
    SidechainDeposit d22;
    ss22 >> d22;
    SidechainDeposit d23;
    ss23 >> d23;
    SidechainDeposit d24;
    ss24 >> d24;
    SidechainDeposit d25;
    ss25 >> d25;
    SidechainDeposit d26;
    ss26 >> d26;
    SidechainDeposit d27;
    ss27 >> d27;
    SidechainDeposit d28;
    ss28 >> d28;
    SidechainDeposit d29;
    ss29 >> d29;
    SidechainDeposit d30;
    ss30 >> d30;

    std::vector<SidechainDeposit> vDeposit { d1, d2, d3, d4, d5, d6, d7, d8,
        d9, d10, d11, d12, d13, d14, d15, d16, d17, d18, d19, d20, d21, d22,
        d23, d24, d25, d26, d27, d28, d29, d30 };

    // Enable this for debugging
    //int i = 0;
    //for (const SidechainDeposit& d : vDeposit) {
    //    std::cout << "Deposit " << i << ":\n";
    //    std::cout << d.ToString() << std::endl;
    //    i++;
    //}

    return vDeposit;
}

BOOST_AUTO_TEST_CASE(sidechain_deposit_sort_deposits)
{
    // Get deposits in valid CTIP spend order
    std::vector<SidechainDeposit> vD = GetTestDeposits();

    // Test sorting the deposits when they are already in valid order
    std::vector<SidechainDeposit> vDepositSorted;
    BOOST_CHECK(SortDeposits(vD, vDepositSorted));
    BOOST_CHECK(vD == vDepositSorted);

    vDepositSorted.clear();

    // Test sorting from reverse order
    std::vector<SidechainDeposit> vReverse = vD;
    std::reverse(vReverse.begin(), vReverse.end());
    BOOST_CHECK(SortDeposits(vReverse, vDepositSorted));
    BOOST_CHECK(vD == vDepositSorted);

    vDepositSorted.clear();

    // Test sorting random order
    std::vector<SidechainDeposit> vRandom {vD[1], vD[0], vD[21], vD[16], vD[4],
        vD[24], vD[15], vD[7], vD[9], vD[8], vD[13], vD[11], vD[12], vD[10],
        vD[14], vD[6], vD[3], vD[17], vD[20], vD[19], vD[18], vD[2], vD[28],
        vD[22], vD[23], vD[5], vD[25], vD[29], vD[26], vD[27]};

    BOOST_CHECK(vRandom != vD);
    BOOST_CHECK(SortDeposits(vRandom, vDepositSorted));
    BOOST_CHECK(vDepositSorted == vD);
}

BOOST_AUTO_TEST_CASE(IsWithdrawalBundleFailCommit)
{
    uint256 hashWithdrawalBundle = GetRandHash();

    CScript script =  GenerateWithdrawalBundleFailCommit(hashWithdrawalBundle);

    uint256 hashWithdrawalBundleFromCommit;
    BOOST_CHECK(script.IsWithdrawalBundleFailCommit(hashWithdrawalBundleFromCommit));

    BOOST_CHECK(hashWithdrawalBundle == hashWithdrawalBundleFromCommit);
}

BOOST_AUTO_TEST_CASE(IsWithdrawalBundleSpentCommit)
{
    uint256 hashWithdrawalBundle = GetRandHash();

    CScript script = GenerateWithdrawalBundleSpentCommit(hashWithdrawalBundle);

    uint256 hashWithdrawalBundleFromCommit;
    BOOST_CHECK(script.IsWithdrawalBundleSpentCommit(hashWithdrawalBundleFromCommit));

    BOOST_CHECK(hashWithdrawalBundle == hashWithdrawalBundleFromCommit);
}

BOOST_AUTO_TEST_CASE(WTFeeEncoding)
{
    CAmount amount;
    CAmount amountRead;
    CScript script;

    // Test 1 * COIN
    amount = COIN;
    script = EncodeWithdrawalFees(amount);
    BOOST_CHECK(DecodeWithdrawalFees(script, amountRead));
    BOOST_CHECK(amountRead == amount);

    // Test 1 * CENT
    amount = CENT;
    script = EncodeWithdrawalFees(amount);
    BOOST_CHECK(DecodeWithdrawalFees(script, amountRead));
    BOOST_CHECK(amountRead == amount);

    // Test with a negative number
    amount = -1000000;
    script = EncodeWithdrawalFees(amount);
    BOOST_CHECK(DecodeWithdrawalFees(script, amountRead));
    BOOST_CHECK(amountRead == amount);

    // Test incrementing from 0.01 to 21 by 1 * CENT
    amount = 0;
    while (amount < 21 * COIN) {
        amount += CENT;
        script = EncodeWithdrawalFees(amount);

        BOOST_CHECK(DecodeWithdrawalFees(script, amountRead));
        BOOST_CHECK(amountRead == amount);
    }

    // Test number greater than CScriptNum default 4 byte integer limit
    amount = 22 * COIN;
    amountRead = 0;
    script = EncodeWithdrawalFees(amount);
    BOOST_CHECK(DecodeWithdrawalFees(script, amountRead));
    BOOST_CHECK(amount == amountRead);

    // Test high number
    amount = MAX_MONEY;
    amountRead = 0;
    script = EncodeWithdrawalFees(amount);
    BOOST_CHECK(DecodeWithdrawalFees(script, amountRead));
    BOOST_CHECK(amount == amountRead);
}

BOOST_AUTO_TEST_CASE(wt_refund_script)
{
    // Test a valid Withdrawalrefund message / script

    std::string strRefundAddress = "sVf5Jjy6EuVdq2oKFDaQAxb6rTYbmQZAPT";
    CTxDestination dest = DecodeDestination(strRefundAddress);

    BOOST_CHECK(IsValidDestination(dest));

    // Checking that the destination is for a KeyID
    const CKeyID* id = boost::get<CKeyID>(&dest);
    BOOST_REQUIRE(id);

    // Normally this would come from the users sidechain wallet
    std::string strPrivKey = "cVS8pYc1uyM1R64QEvPzJHiJn84q9Agd3mCHvyvFTf3zmCTXNAh4";

    CBitcoinSecret vchSecret;
    BOOST_CHECK(vchSecret.SetString(strPrivKey));

    CKey privKey = vchSecret.GetKey();
    BOOST_CHECK(privKey.IsValid());

    // Add Withdrawalto psidechaintree
    SidechainWithdrawal wt;
    wt.nSidechain = 0;
    wt.strDestination = "";
    wt.strRefundDestination = strRefundAddress;
    wt.amount = 0;
    wt.mainchainFee = 0;
    wt.status = WITHDRAWAL_UNSPENT;
    wt.hashBlindTx = uint256();

    psidechaintree->WriteWithdrawalUpdate(std::vector<SidechainWithdrawal> { wt });

    uint256 hashMessage = GetWithdrawalRefundMessageHash(wt.GetID());

    // We are really only signing the hash of the message
    std::vector<unsigned char> vchSig;
    BOOST_CHECK(privKey.SignCompact(hashMessage, vchSig));

    // Generate refund request script
    CScript script = GenerateWithdrawalRefundRequest(wt.GetID(), vchSig);

    // Check refund script
    uint256 idFromScript;
    std::vector<unsigned char> vchSigFromScript;
    BOOST_CHECK(script.IsWithdrawalRefundRequest(idFromScript, vchSigFromScript));
    BOOST_CHECK(idFromScript == wt.GetID());
    BOOST_CHECK(vchSigFromScript == vchSig);

    // Verify refund script
    SidechainWithdrawal wtOut;
    BOOST_CHECK(VerifyWithdrawalRefundRequest(idFromScript, vchSigFromScript, wtOut));

    // Verify again ourselves
    CPubKey pubkey;
    BOOST_CHECK(pubkey.RecoverCompact(hashMessage, vchSig));

    BOOST_CHECK(pubkey.GetID() == privKey.GetPubKey().GetID());
    BOOST_CHECK(CTxDestination(pubkey.GetID()) == dest);
}

BOOST_AUTO_TEST_CASE(IsPrevBlockCommit)
{
    uint256 hashPrevMain = GetRandHash();
    uint256 hashPrevSide = GetRandHash();

    // Generate prev block commit
    CScript script = GeneratePrevBlockCommit(hashPrevMain, hashPrevSide);

    // Check prev block script
    uint256 h1;
    uint256 h2;
    BOOST_CHECK(script.IsPrevBlockCommit(h1, h2));
    BOOST_CHECK(h1 == hashPrevMain);
    BOOST_CHECK(h2 == hashPrevSide);
}

BOOST_AUTO_TEST_CASE(wt_refund_script_invalid_address)
{
    // Test a Withdrawalrefund script with invalid address / signature

    std::string strRefundAddress = "sVf5Jjy6EuVdq2oKFDaQAxb6rTYbmQZAPT";
    CTxDestination dest = DecodeDestination(strRefundAddress);

    BOOST_CHECK(IsValidDestination(dest));

    // Checking that the destination is for a KeyID
    const CKeyID* id = boost::get<CKeyID>(&dest);
    BOOST_REQUIRE(id);

    // Normally this would come from the users sidechain wallet
    std::string strPrivKey = "cVS8pYc1uyM1R64QEvPzJHiJn84q9Agd3mCHvyvFTf3zmCTXNAh4";

    CBitcoinSecret vchSecret;
    BOOST_CHECK(vchSecret.SetString(strPrivKey));

    CKey privKey = vchSecret.GetKey();
    BOOST_CHECK(privKey.IsValid());

    // We will set the refund address to an address different from the one we
    // sign the message with and check that it is rejected.
    std::string strOtherAdress = "sSnLM62jFg5XHiHdN1nzbQ9dHXzUnZS2kP";

    // Add Withdrawalto psidechaintree
    SidechainWithdrawal wt;
    wt.nSidechain = 0;
    wt.strDestination = "";
    wt.strRefundDestination = strOtherAdress;
    wt.amount = 0;
    wt.mainchainFee = 0;
    wt.status = WITHDRAWAL_UNSPENT;
    wt.hashBlindTx = uint256();

    psidechaintree->WriteWithdrawalUpdate(std::vector<SidechainWithdrawal> { wt });

    uint256 hashMessage = GetWithdrawalRefundMessageHash(wt.GetID());

    // We are really only signing the hash of the message
    std::vector<unsigned char> vchSig;
    BOOST_CHECK(privKey.SignCompact(hashMessage, vchSig));

    // Generate refund request script
    CScript script = GenerateWithdrawalRefundRequest(wt.GetID(), vchSig);

    // Check refund script
    uint256 idFromScript;
    std::vector<unsigned char> vchSigFromScript;
    BOOST_CHECK(script.IsWithdrawalRefundRequest(idFromScript, vchSigFromScript));
    BOOST_CHECK(idFromScript == wt.GetID());
    BOOST_CHECK(vchSigFromScript == vchSig);

    // Refund script should be invalid
    SidechainWithdrawal wtOut;
    BOOST_CHECK(!VerifyWithdrawalRefundRequest(idFromScript, vchSigFromScript, wtOut));
}

BOOST_AUTO_TEST_CASE(wt_refund_script_invalid_wtid)
{
    // Test a Withdrawalrefund script with invalid WithdrawalID

    std::string strRefundAddress = "sVf5Jjy6EuVdq2oKFDaQAxb6rTYbmQZAPT";
    CTxDestination dest = DecodeDestination(strRefundAddress);

    BOOST_CHECK(IsValidDestination(dest));

    // Checking that the destination is for a KeyID
    const CKeyID* id = boost::get<CKeyID>(&dest);
    BOOST_REQUIRE(id);

    // Normally this would come from the users sidechain wallet
    std::string strPrivKey = "cVS8pYc1uyM1R64QEvPzJHiJn84q9Agd3mCHvyvFTf3zmCTXNAh4";

    CBitcoinSecret vchSecret;
    BOOST_CHECK(vchSecret.SetString(strPrivKey));

    CKey privKey = vchSecret.GetKey();
    BOOST_CHECK(privKey.IsValid());

    // Add Withdrawalto psidechaintree
    SidechainWithdrawal wt;
    wt.nSidechain = 0;
    wt.strDestination = "";
    wt.strRefundDestination = strRefundAddress;
    wt.amount = 0;
    wt.mainchainFee = 0;
    wt.status = WITHDRAWAL_UNSPENT;
    wt.hashBlindTx = uint256();

    psidechaintree->WriteWithdrawalUpdate(std::vector<SidechainWithdrawal> { wt });

    // Put an invalid WithdrawalID in the message
    uint256 hashMessage = GetWithdrawalRefundMessageHash(GetRandHash());

    // We are really only signing the hash of the message
    std::vector<unsigned char> vchSig;
    BOOST_CHECK(privKey.SignCompact(hashMessage, vchSig));

    // Generate refund request script
    CScript script = GenerateWithdrawalRefundRequest(wt.GetID(), vchSig);

    // Check refund script
    uint256 idFromScript;
    std::vector<unsigned char> vchSigFromScript;
    BOOST_CHECK(script.IsWithdrawalRefundRequest(idFromScript, vchSigFromScript));
    BOOST_CHECK(idFromScript == wt.GetID());
    BOOST_CHECK(vchSigFromScript == vchSig);

    // Refund script should be invalid
    SidechainWithdrawal wtOut;
    BOOST_CHECK(!VerifyWithdrawalRefundRequest(idFromScript, vchSigFromScript, wtOut));
}


BOOST_AUTO_TEST_CASE(depositaddress)
{
    // Generate a deposit address for hivemind (0) and make sure the format
    // matches what we expect.
    std::string strDest = "patrick";

    std::string strDepositAddress = GenerateDepositAddress(strDest);

    BOOST_CHECK(strDepositAddress == "s0_patrick_643e86");

    // Parsing should return just "patrick"
    std::string strOut = "";
    unsigned int nSidechain;
    BOOST_CHECK(ParseDepositAddress(strDepositAddress, strOut, nSidechain));
    BOOST_CHECK(strOut == "patrick");
    BOOST_CHECK(nSidechain == THIS_SIDECHAIN);

}

BOOST_AUTO_TEST_SUITE_END()
